import os
import hmac
import hashlib
import base64
import requests
import json
from config import CLOUDPAYMENTS_SECRET  # —Å–µ–∫—Ä–µ—Ç –±–µ—Ä—ë–º –∏–∑ Railway –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç CloudPayments
def verify_signature(body: bytes, received_signature: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ Content-HMAC
    :param body: –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ –±–∞–π—Ç–∞—Ö
    :param received_signature: –ü–æ–¥–ø–∏—Å—å –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Content-HMAC
    :return: True, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞
    """
    if not CLOUDPAYMENTS_SECRET:
        print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è CLOUDPAYMENTS_SECRET –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
        return False

    secret = CLOUDPAYMENTS_SECRET.encode("utf-8")
    computed_signature = base64.b64encode(
        hmac.new(secret, body, digestmod=hashlib.sha256).digest()
    ).decode()

    if computed_signature == received_signature:
        print("‚úÖ –ü–æ–¥–ø–∏—Å—å CloudPayments –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.")
        return True
    else:
        print("‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç.")
        print(f"üîé –û–∂–∏–¥–∞–ª–∞—Å—å: {computed_signature}")
        print(f"üì• –ü–æ–ª—É—á–µ–Ω–∞: {received_signature}")
        return False

# ‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ webhook)
def send_test_payment():
    url = "https://empathai-bot-production.up.railway.app/payment/cloudpayments/result"
    headers = {
        "Content-Type": "application/json",
        "Content-HMAC": ""  # –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∏–∂–µ
    }

    data = {
        "Status": "Completed",
        "InvoiceId": "123456",
        "Amount": 1000,
        "Currency": "RUB",
        "Data": {
            "telegram_id": "944583273",  # üëà –∑–∞–º–µ–Ω–∏—à—å –Ω–∞ –Ω—É–∂–Ω—ã–π ID –ø—Ä–∏ —Ç–µ—Å—Ç–µ
            "plan": "monthly"
        }
    }

    body = json.dumps(data, separators=(',', ':')).encode('utf-8')

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–∏ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ base64 ‚Äî –∫–∞–∫ —Ç—Ä–µ–±—É–µ—Ç CloudPayments)
    signature = base64.b64encode(
        hmac.new(
            CLOUDPAYMENTS_SECRET.encode(),
            body,
            hashlib.sha256
        ).digest()
    ).decode()

    headers["Content-HMAC"] = signature

    # –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ç–≤–æ–π webhook
    response = requests.post(url, headers=headers, data=body)
    print("üì§ –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
    print("üßæ –°—Ç–∞—Ç—É—Å:", response.status_code)
    print("üì® –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.text)

from cloudpayments import send_test_payment  # —É–±–µ–¥–∏—Å—å, —á—Ç–æ –∏–º–ø–æ—Ä—Ç –µ—Å—Ç—å

@app.get("/test-payment")
async def test_payment():
    send_test_payment()
    return {"status": "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"}

