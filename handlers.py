import os
import requests
from models import User
from telegram import Bot, ReplyKeyboardMarkup, KeyboardButton
from utils import clean_markdown
from fastapi import Request
from database import SessionLocal
from models import (
    get_user_by_telegram_id,
    create_user,
    update_user_thread_id,
    increment_message_count,
    reset_user_thread
)
from openai_api import send_message_to_assistant

# ‚úÖ Telegram ID –∞–¥–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /admin_stats
ADMIN_IDS = ["944583273", "396497806"]  # üîÅ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞

bot = Bot(token=os.environ["TELEGRAM_TOKEN"])
FREE_MESSAGES_LIMIT = int(os.environ.get("FREE_MESSAGES_LIMIT", 50))


def main_menu():
    buttons = [
        [KeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É")],
        [KeyboardButton("üìú –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"), KeyboardButton("‚ùì –ì–∏–¥ –ø–æ –±–æ—Ç—É")],
        [KeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥"), KeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")]
    ]
    return ReplyKeyboardMarkup(buttons, resize_keyboard=True)


async def handle_update(update: dict):
    print("‚úÖ Webhook –ø–æ–ª—É—á–µ–Ω –æ—Ç Telegram")
    print("üì¶ update:", update)
    
       # === –û–±—Ä–∞–±–æ—Ç–∫–∞ inline-–∫–Ω–æ–ø–æ–∫ (callback_query) ===
    if text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
        from datetime import datetime, timezone
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
    
        chat_id = message["chat"]["id"]  # ‚Üê –≤–æ—Ç —ç—Ç–æ –Ω—É–∂–Ω–æ!
        telegram_id = str(chat_id)
        user = get_user_by_telegram_id(db, telegram_id)
    
        total_referrals = db.query(User).filter(User.referrer_code == telegram_id).count()
        now = datetime.now(timezone.utc)
        month_start = datetime(now.year, now.month, 1, tzinfo=timezone.utc)
    
        monthly_referrals = db.query(User).filter(
            User.referrer_code == telegram_id,
            User.created_at >= month_start
        ).count()
    
        referrals_info = (
            f"\nüë• –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏:\n‚Äî –í—Å–µ–≥–æ: {total_referrals} —á–µ–ª–æ–≤–µ–∫\n‚Äî –í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ: {monthly_referrals} —á–µ–ª–æ–≤–µ–∫"
            if total_referrals > 0 else
            "\nüë• –í—ã –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏."
        )
    
        message_text = (
            f"üë§ –í–∞—à Telegram ID: {telegram_id}\n"
            f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {user.free_messages_used} –∏–∑ 50\n"
            f"‚è≥ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: –∞–∫—Ç–∏–≤–µ–Ω\n\n"
            f"üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: https://t.me/EmpathAI_Bot?start={telegram_id}\n"
            f"üí∞ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π ‚Äî –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Ö–æ–¥"
            f"{referrals_info}\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: {user.balance:.2f}\n"
            f"üìà –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.total_earned:.2f}\n"
            f"üí± –í—ã–ø–ª–∞—Ç—ã –≤–æ–∑–º–æ–∂–Ω—ã –≤ —Ç–µ–Ω–≥–µ, —Ä—É–±–ª—è—Ö –∏–ª–∏ –¥–æ–ª–ª–∞—Ä–∞—Ö"
        )
    
        withdraw_button = InlineKeyboardMarkup([
            [InlineKeyboardButton("üíµ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤", callback_data="withdraw_request")]
        ])
    
        bot.send_message(chat_id, message_text, reply_markup=withdraw_button)
        return


       
    db = SessionLocal()  # —Å–æ–∑–¥–∞—ë–º —Å–µ—Å—Å–∏—é –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    try:
        message = update.get("message")  # –∏–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        
        print("DEBUG: message =", message)
        if not message:
            print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—è 'message'")
            return  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

        telegram_id = str(message["from"]["id"])  # –ø–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å—Ç—Ä–æ–∫–∞)
        text = message.get("text", "")  # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        chat_id = message["chat"]["id"]  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –æ—Ç–≤–µ—Ç—ã

        # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º ---
        ref_code = None  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        if text.startswith("/start"):  # –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ–º–∞–Ω–¥—ã /start
            parts = text.split(" ", 1)  # —Ä–∞–∑–¥–µ–ª—è–µ–º –ø–æ –ø—Ä–æ–±–µ–ª—É –Ω–∞ –∫–æ–º–∞–Ω–¥—É –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä (–µ—Å–ª–∏ –µ—Å—Ç—å)
            if len(parts) > 1:
                ref_code = parts[1].strip()  # –±–µ—Ä–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ—Å–ª–µ /start –∫–∞–∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
        user = get_user_by_telegram_id(db, telegram_id)
        if not user:
            print(f"üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. Telegram ID: {telegram_id}, —Ä–µ—Ñ–∫–æ–¥: {ref_code}")
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–≥–æ, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å)
            user = create_user(db, telegram_id, referrer_code=ref_code)

            # === –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É ===
            BONUS_AMOUNT = 100.0  # –ü–æ–∫–∞ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            
            if ref_code:
                inviter = db.query(User).filter(User.telegram_id == ref_code).first()
                if inviter:
                    inviter.balance += BONUS_AMOUNT
                    inviter.total_earned += BONUS_AMOUNT
                    db.commit()
                    print(f"‚úÖ –ù–∞—á–∏—Å–ª–µ–Ω–æ {BONUS_AMOUNT} –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É: {ref_code}")


            
        # === üë®‚Äçüíª –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_stats (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤) ===
        if text == "/admin_stats":
            if user.telegram_id not in ADMIN_IDS:
                bot.send_message(chat_id, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            else:
                from utils import get_stats_summary
                stats = get_stats_summary(db)
                bot.send_message(chat_id, stats)
            return
            
        # üîê –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_referrals (–¢–û–ü 10 –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏—Ö)
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ (—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
        elif text == "/admin_referrals":
            if user.telegram_id not in ADMIN_IDS:
                bot.send_message(chat_id, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            else:
                from admin_commands import handle_admin_stats  # –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                handle_admin_stats(db, chat_id, bot)  # –≤—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            return

        if text == "/start":
            bot.send_message(
                chat_id,
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                "–ü—Ä–∏–≤–µ—Ç, —è –ò–ª–∞ ‚Äî —Ç–≤–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–Ω–∏–º–∞–Ω–∏–∏ —Å–µ–±—è –∏ –ø–æ–∏—Å–∫–µ –¥—É—à–µ–≤–Ω–æ–≥–æ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è.\n\n"
                "üÜì –ù–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω–æ 50 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n"
                "üí≥ –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ª–∏–º–∏—Ç–∞ –º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.\n\n"
                "üìã –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.",
                reply_markup=main_menu()
            )
            return


        if text == "üîÑ –°–±—Ä–æ—Å–∏—Ç—å –¥–∏–∞–ª–æ–≥":
            reset_user_thread(db, user)
            bot.send_message(chat_id, "–î–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω. –ú–æ–∂–µ–º –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ üåÄ", reply_markup=main_menu())
            return

        # ==== üë§ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç" ====
# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–±–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞

        if text == "üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç":
            from datetime import datetime, timezone
            from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
            telegram_id = str(message["chat"]["id"])
        
            # –†–∞—Å—á—ë—Ç –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö
            total_referrals = db.query(User).filter(User.referrer_code == telegram_id).count()
            now = datetime.now(timezone.utc)
            month_start = datetime(now.year, now.month, 1, tzinfo=timezone.utc)
        
            monthly_referrals = db.query(User).filter(
                User.referrer_code == telegram_id,
                User.created_at >= month_start
            ).count()
        
            if total_referrals > 0:
                referrals_info = f"\nüë• –í—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏:\n‚Äî –í—Å–µ–≥–æ: {total_referrals} —á–µ–ª–æ–≤–µ–∫\n‚Äî –í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ: {monthly_referrals} —á–µ–ª–æ–≤–µ–∫"
            else:
                referrals_info = "\nüë• –í—ã –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏."
        
            message_text = (
                f"üë§ –í–∞—à Telegram ID: {telegram_id}\n"
                f"üì® –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {user.free_messages_used} –∏–∑ 50\n"
                f"‚è≥ –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: –∞–∫—Ç–∏–≤–µ–Ω\n\n"
                f"üîó –í–∞—à–∞ —Å—Å—ã–ª–∫–∞: https://t.me/EmpathAI_Bot?start={telegram_id}\n"
                f"üí∞ –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å—Å—ã–ª–∫–æ–π ‚Äî –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –¥–æ—Ö–æ–¥"
                f"{referrals_info}"
                f"\nüí∞ –ë–∞–ª–∞–Ω—Å: {user.balance:.2f} —Ç–≥\n"
                f"üìà –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: {user.total_earned:.2f} —Ç–≥"
            )
        
            # üëá –ö–Ω–æ–ø–∫–∞ "–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤" ‚Äî –≤–Ω–∏–∑—É
            withdraw_button = InlineKeyboardMarkup([
                [InlineKeyboardButton("üíµ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤", callback_data="withdraw_request")]
            ])
        
            bot.send_message(chat_id, message_text, parse_mode="Markdown", reply_markup=withdraw_button)
            return


        if text in ["üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "üìú –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", "‚ùì –ì–∏–¥ –ø–æ –±–æ—Ç—É"]:
            filename = {
                "üí≥ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É": "subscribe.txt",
                "‚ùì –ì–∏–¥ –ø–æ –±–æ—Ç—É": "guide.txt",
                "üìú –£—Å–ª–æ–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è": "rules.txt"
            }[text]

            try:
                with open(f"texts/{filename}", "r", encoding="utf-8") as f:
                    response = f.read()
            except FileNotFoundError:
                response = "–§–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω."
            bot.send_message(chat_id, response, reply_markup=main_menu())
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞
        if user.free_messages_used >= FREE_MESSAGES_LIMIT:
            bot.send_message(chat_id, "‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n–û—Ñ–æ—Ä–º–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.", reply_markup=main_menu())
            return

        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç GPT (Assistant API)
        try:
            assistant_response, thread_id = send_message_to_assistant(user.thread_id, text)
        except Exception as e:
            if "run is active" in str(e):
                print("‚ö†Ô∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π run –µ—â—ë –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è. –°–±—Ä–∞—Å—ã–≤–∞—é thread.")
                user.thread_id = None
                db.commit()
                assistant_response, thread_id = send_message_to_assistant(None, text)
            else:
                raise e


        if not user.thread_id:
            update_user_thread_id(db, user, thread_id)
        
        # ‚úÖ –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
        increment_message_count(db, user)
        
        assistant_response = clean_markdown(assistant_response)
        bot.send_message(chat_id, assistant_response, reply_markup=main_menu())


    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ handle_update:", e)

    finally:
        db.close()
