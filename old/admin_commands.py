from models import User, get_user_by_telegram_id, create_user
from sqlalchemy.orm import Session

# ‚úÖ /admin_stats ‚Äî –æ–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
def generate_admin_stats(db: Session) -> str:
    total_users = db.query(User).count()
    paid_users = db.query(User).filter(User.has_paid == True).count()
    unlimited_users = db.query(User).filter(User.is_unlimited == True).count()

    return (
        f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üí≥ –° –ø–æ–¥–ø–∏—Å–∫–æ–π: {paid_users}\n"
        f"‚ôæ –ë–µ–∑–ª–∏–º–∏—Ç: {unlimited_users}"
    )

# ‚úÖ /admin_referrals ‚Äî –¢–û–ü –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏—Ö
def generate_admin_referrals(db: Session) -> str:
    from sqlalchemy import func

    top_referrers = (
        db.query(User.referrer_code, func.count(User.id).label("ref_count"))
        .filter(User.referrer_code.isnot(None))
        .group_by(User.referrer_code)
        .order_by(func.count(User.id).desc())
        .limit(10)
        .all()
    )

    total_referrals = db.query(User).filter(User.referrer_code.isnot(None)).count()
    unique_referrers = db.query(User.referrer_code).distinct().count()

    message = "üìä –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–¢–û–ü 10):\n"
    for i, (ref_code, count) in enumerate(top_referrers, start=1):
        message += f"{i}. {ref_code} ‚Äî {count} –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö\n"

    message += f"\nüî¢ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö: {total_referrals}"
    message += f"\nüí∏ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤: {unique_referrers}"
    return message

# ‚úÖ /give_unlimited <id> ‚Äî –≤—ã–¥–∞—Ç—å –±–µ–∑–ª–∏–º–∏—Ç
def apply_unlimited_access(db: Session, telegram_id: str) -> str:
    target_user = get_user_by_telegram_id(db, telegram_id)
    if not target_user:
        target_user = create_user(db, telegram_id)

    target_user.is_unlimited = True
    db.commit()

    return f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id} –≤—ã–¥–∞–Ω –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø."
