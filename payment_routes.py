from fastapi import APIRouter, Request
from starlette.responses import PlainTextResponse
from models import get_user_by_telegram_id
from database import SessionLocal
from telegram import Bot
import os
import hashlib
from datetime import datetime, timedelta

print("üîÅ payment_routes.py –∑–∞–≥—Ä—É–∂–µ–Ω")

router = APIRouter()

ROBO_LOGIN = os.environ["ROBO_LOGIN"]
ROBO_PASSWORD2 = os.environ["ROBO_PASSWORD2"]
REFERRAL_REWARD_PERCENT = 30
bot = Bot(token=os.environ["TELEGRAM_TOKEN"])


@router.post("/result")
async def payment_result(request: Request):
    form = await request.form()

    out_summ_str = form.get("OutSum")  # ‚úÖ –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –µ—Å—Ç—å: "1.000000"
    inv_id = form.get("InvId")
    signature_value = form.get("SignatureValue", "").upper()
    telegram_id = str(form.get("shp_id"))
    plan = form.get("shp_plan")

    # –°–æ–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã shp_... –≤ —Å—Ç—Ä–æ–∫—É –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
    shp_items = {"shp_id": telegram_id, "shp_plan": plan}
    shp_sorted = ":".join(f"{k}={v}" for k, v in sorted(shp_items.items()))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –ø–æ–¥–ø–∏—Å–∏ —Å —É—á—ë—Ç–æ–º ROBO_LOGIN
    signature_raw = f"{ROBO_LOGIN}:{out_summ_str}:{inv_id}:{ROBO_PASSWORD2}:{shp_sorted}"
    expected_signature = hashlib.md5(signature_raw.encode()).hexdigest().upper()

    print(f"[üßæ] signature_raw = {signature_raw}")
    print(f"[‚úÖ] expected_signature = {expected_signature}")
    print(f"[üì®] received_signature = {signature_value}")

    if signature_value != expected_signature:
        print("‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç.")
        return PlainTextResponse("bad sign", status_code=400)

    db = SessionLocal()
    user = get_user_by_telegram_id(db, telegram_id)
    print(f"üì• –ü–æ–ª—É—á–µ–Ω telegram_id –∏–∑ Robokassa: {telegram_id} (—Ç–∏–ø: {type(telegram_id)})")

    if not user:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î –ø–æ telegram_id = {telegram_id}")
        return PlainTextResponse("user not found", status_code=404)
    else:
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω: {user.telegram_id}")

    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    user.has_paid = True
    user.subscription_expires_at = datetime.utcnow() + timedelta(days=30)
    db.commit()
    print("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –ë–î.")

    # –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ
    if user.referrer_code and user.referrer_code.isdigit():
        ref_user = get_user_by_telegram_id(db, user.referrer_code)
        if ref_user:
            reward = int(out_summ * REFERRAL_REWARD_PERCENT / 100)
            ref_user.ref_earned += reward
            ref_user.ref_count += 1
            db.commit()
            print(f"üí∏ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {ref_user.telegram_id}.")

    # –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        bot.send_message(chat_id=int(telegram_id), text="üéâ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É.")
        print("üì© –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except Exception as e:
        print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)

    return PlainTextResponse("OK")
