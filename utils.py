import re

def clean_markdown(text):
    # –£–¥–∞–ª–µ–Ω–∏–µ –∂–∏—Ä–Ω–æ–≥–æ –∏ –∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ
    text = re.sub(r"\*\*(.*?)\*\*", r"\1", text)
    text = re.sub(r"\*(.*?)\*", r"\1", text)
    text = re.sub(r"__(.*?)__", r"\1", text)

    # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ (##, # –∏ —Ç.–¥.)
    text = re.sub(r"^#{1,6}\s*", "", text, flags=re.MULTILINE)

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç ">"
    text = re.sub(r"^>\s*", "", text, flags=re.MULTILINE)

    # –ó–∞–º–µ–Ω–∞ –º–∞—Ä–∫–µ—Ä–æ–≤ —Å–ø–∏—Å–∫–æ–≤ (-, *) –Ω–∞ ‚Ä¢
    text = re.sub(r"^\s*[-*]\s+", "‚Ä¢ ", text, flags=re.MULTILINE)

    return text


from datetime import datetime, timedelta
from sqlalchemy import func
from models import User  # –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

# üìä –°–≤–æ–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º
# –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–µ—Å—Å–∏—é SQLAlchemy, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏:
# - –≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# - –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞ 24 —á–∞—Å–∞
# - –Ω–æ–≤—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
# - –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –±–æ–ª–µ–µ 7 –¥–Ω–µ–π
# - –æ–±—â–µ–µ —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π
# - —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
def get_stats_summary(session):
    now = datetime.utcnow()
    day_ago = now - timedelta(days=1)
    week_ago = now - timedelta(days=7)

    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users = session.query(func.count(User.id)).scalar()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–∏—Å–∞–≤—à–∏—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
    active_24h = session.query(func.count(User.id)).filter(User.last_message_at >= day_ago).scalar()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø—Ä–∏—à–µ–¥—à–∏—Ö —Å–µ–≥–æ–¥–Ω—è
    new_today = session.query(func.count(User.id)).filter(func.date(User.first_seen_at) == now.date()).scalar()

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –±–æ–ª–µ–µ 7 –¥–Ω–µ–π
    inactive_7d = session.query(func.count(User.id)).filter(User.last_message_at < week_ago).scalar()

    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    total_messages = session.query(func.sum(User.total_messages)).scalar() or 0

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏
    messages_24h = session.query(func.sum(User.total_messages)).filter(User.last_message_at >= day_ago).scalar() or 0

    # –í–æ–∑–≤—Ä–∞—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –≥–æ—Ç–æ–≤–æ–π –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram
    return (
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ EmpathAI:\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"üü¢ –ê–∫—Ç–∏–≤–Ω—ã –∑–∞ 24 —á: {active_24h}\n"
        f"üÜï –ù–æ–≤—ã–µ —Å–µ–≥–æ–¥–Ω—è: {new_today}\n"
        f"üí§ –ù–µ–∞–∫—Ç–∏–≤–Ω—ã (7+ –¥–Ω–µ–π): {inactive_7d}\n"
        f"üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}\n"
        f"üí¨ –ó–∞ 24 —á: {messages_24h}"
    )
